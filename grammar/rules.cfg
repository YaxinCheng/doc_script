Root ParsingStart CompilationUnit ParsingEnd
CompilationUnit Declarations
Literal BooleanLiteral
Literal IntegerLiteral
Literal HexLiteral
Literal BinaryLiteral
Literal StringLiteral
Literal FloatingLiteral
Name SimpleName
Name QualifiedName
SimpleName Identifier
QualifiedName Name . Identifier
EOL NewLine
EOL ;
Declarations
Declarations DeclarationStatement Declarations
DeclarationStatement ImportDeclaration EOL
ImportDeclaration SingleImportDeclarationStatement
ImportDeclaration MultipleImportDeclarationStatement
ImportDeclaration WildcardImportDeclarationStatement
SingleImportDeclarationStatement use Name
MultipleImportDeclarationStatement use Name . { CommaSeparatedNames }
WildcardImportDeclarationStatement use Name . *
CommaSeparatedNames Name
CommaSeparatedNames Name ,
CommaSeparatedNames Name , CommaSeparatedNames
DeclarationStatement ConstantDeclarationStatement EOL
ConstantDeclarationStatement ConstantDeclaration
ConstantDeclaration const Identifier = Expression
ConstantDeclarationStatements
ConstantDeclarationStatements ConstantDeclarationStatement EOL ConstantDeclarationStatements
DeclarationStatement StructDeclarationStatement EOL
StructDeclarationStatement StructDeclaration
StructDeclaration struct Identifier ( Fields )
StructDeclaration struct Identifier ( Fields ) StructBody
StructDeclaration struct Identifier
StructDeclaration struct Identifier StructBody
Fields
Fields Field
Fields Field , Fields
Field Identifier : Type
Field Identifier : Type = Expression
StructBody { ConstantDeclarationStatements }
Type Name
Statements
Statements Statements Statement
Statement ExpressionStatement
Statement DeclarationStatement
ExpressionStatements
ExpressionStatements ExpressionStatements ExpressionStatement
ExpressionStatement Expression EOL
Expression ChainableExpression
ChainableExpression StructInitExpression
ChainableExpression Block
ChainableExpression Literal
ChainableExpression ChainingMethodInvocation
ChainableExpression ( Expression )
Expression ConstantUse
ConstantUse Name
ConstantUse self . Name
Block { Statements }
Block { Statements Expression }
StructInitExpression Name ( Parameters )
StructInitExpression Name ( Parameters ) StructInitContent
StructInitExpression Name StructInitContent
CommaSeparatedExpressions
CommaSeparatedExpressions Expression
CommaSeparatedExpressions Expression , CommaSeparatedExpressions
CollectionLiteral { CommaSeparatedExpressions }
Parameters
Parameters Parameter
Parameters Parameter , Parameters
Parameter Identifier : Expression
Parameter Expression
ChainingMethodInvocation ChainableExpression . Name ( Parameters )
StructInitContent { ExpressionStatements }
StructInitContent { ExpressionStatements Expression }